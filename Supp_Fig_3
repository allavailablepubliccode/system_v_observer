%% Supplementary Figure 3: Summarize fit quality statistics
% Evaluate and visualize model fit quality across subjects.
% Computes R², residual skewness, and autocorrelation.
% Flags poor fits and visualizes per-subject metrics.
%
% NOTE: Adjust `indir` to point to your own LAP file directory.

clear; clc; close all; warning('off','all'); rng(0);

% ----------------------- Parameters ----------------------------

indir = 'your_path';  % Folder with LAP files
subs  = 1:16;   % Subjects to process (1 to 16)

% Thresholds for excluding subjects
R2_thresh   = 0;     % Exclude if R² < 0
skew_thresh = 5;     % Exclude if |skewness| > 5
bad_subs    = [];

% Preallocate result arrays
R2_all     = nan(1, numel(subs));
skew_all   = nan(1, numel(subs));
acorr1_all = nan(1, numel(subs));

% ------------------- Per-Subject Processing --------------------

fprintf('===== Per-Subject Model Fit =====\n');
fprintf('%6s  %6s  %8s  %6s\n', 'Subj', 'R²', 'Skew', 'AC(1)');

for ii = 1:numel(subs)
    subject = subs(ii);
    fname   = fullfile(indir, ['subject_' num2str(subject) '.mat']);

    if ~exist(fname, 'file')
        warning('File not found: %s', fname);
        continue;
    end

    % Load LAP structure
    S = load(fname, 'LAP');
    LAP = S.LAP;

    try
        % Extract observed and predicted macro signals
        Y_empirical = LAP.Y(2,:)';           % Empirical macro-HFB
        Y_model     = LAP.qU.v{1}(2,:)';     % Predicted macro-HFB
    catch
        warning('Signal extraction failed for subject %d', subject);
        continue;
    end

    % Ensure matching lengths
    N = min(length(Y_empirical), length(Y_model));
    if N < 10
        warning('Too few timepoints for subject %d', subject);
        continue;
    end

    % Normalize signals and compute residuals
    Y_emp_z = zscore(Y_empirical(1:N));
    Y_mod_z = zscore(Y_model(1:N));
    residual = Y_emp_z - Y_mod_z;

    % Compute R²
    R2 = 1 - sum((Y_emp_z - Y_mod_z).^2) / ...
              sum((Y_emp_z - mean(Y_emp_z)).^2);
    R2 = max(-Inf, real(R2));  % Ensure real-valued

    % Compute skewness and residual autocorrelation
    skewness_val = skewness(residual);
    acorr_vals   = autocorr(residual, 10);
    acorr1       = acorr_vals(2);  % lag-1 autocorrelation

    % Store results
    R2_all(ii)     = R2;
    skew_all(ii)   = skewness_val;
    acorr1_all(ii) = acorr1;

    % Flag subject as "bad" if failing any threshold
    if (R2 < R2_thresh) || (abs(skewness_val) > skew_thresh)
        bad_subs(end+1) = subject; %#ok<AGROW>
    end

    % Display to console
    fprintf('%6d  %6.3f  %8.3f  %6.3f\n', subject, R2, skewness_val, acorr1);
end

% ------------------------ Group Summary -------------------------

fprintf('\n===== Group Summary =====\n');
fprintf('Median R²   : %.3f\n', nanmedian(R2_all));
fprintf('Median Skew : %.3f\n', nanmedian(skew_all));
fprintf('Median AC1  : %.3f\n', nanmedian(acorr1_all));

fprintf('\nBad fit criteria: R² < %.1f or |skew| > %.1f\n', R2_thresh, skew_thresh);
fprintf('Bad fits: %d of %d subjects\n', numel(bad_subs), numel(subs));
fprintf('Bad subject indices: %s\n', mat2str(bad_subs));
fprintf('Good fits retained: %d of %d subjects\n', ...
    numel(subs) - numel(bad_subs), numel(subs));

% ------------------------ Visualization -------------------------

figure('Color', 'w', 'Position', [100, 100, 800, 600]);

% Assign colors: blue for good fits, gray for bad
is_bad = ismember(subs, bad_subs);
bar_colors = repmat([0 0.4470 0.7410], numel(subs), 1);  % default blue
bar_colors(is_bad, :) = repmat([0.5 0.5 0.5], sum(is_bad), 1);  % gray for bad

% -- R² subplot --
subplot(3,1,1);
b1 = bar(R2_all, 'FaceColor', 'flat');
b1.CData = bar_colors;
yline(0, 'r--', 'LineWidth', 1.5);  % R² threshold
ylabel('R²');
title('Model Fit (R² per subject)');
ylim([-1 1]);
xticks(1:numel(subs)); xticklabels(subs); grid on;

% -- Skewness subplot --
subplot(3,1,2);
b2 = bar(skew_all, 'FaceColor', 'flat');
b2.CData = bar_colors;
yline(5,  'r--', 'LineWidth', 1.5);  % skewness threshold
yline(-5, 'r--', 'LineWidth', 1.5);
ylabel('Skewness');
title('Residual Skewness');
ylim([-5 5]);
xticks(1:numel(subs)); xticklabels(subs); grid on;

% -- Autocorrelation subplot --
subplot(3,1,3);
b3 = bar(acorr1_all, 'FaceColor', 'flat');
b3.CData = bar_colors;
ylabel('AC(1)');
title('Residual Autocorrelation (Lag 1)');
ylim([0 1]);
xticks(1:numel(subs)); xticklabels(subs); xlabel('Subject');
grid on;

